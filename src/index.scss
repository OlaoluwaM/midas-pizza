@import url('https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,300;0,400;0,500;0,700;0,800;1,300;1,400;1,500&family=Raleway:wght@100;200;400;500;700;900&display=swap');

// Accent font will be Raleway extra-light
$primaryFont: 'Raleway', sans-serif;
$secondaryFont: 'Montserrat', sans-serif;

$cssSpring: cubic-bezier(0.175, 0.885, 0.32, 1.275);

$fontWeights: (
  'thin': 100,
  'xLight': 200,
  'light': 300,
  'regular': 400,
  'medium': 500,
  'bold': 700,
  'xBold': 800,
  'xXBold': 900,
);

$colorPalette: (
  background: #eff0f3,
  backgroundDarker: #dcdee5,
  backgroundLighter: #fffffe,
  baseColor: #ff8e3c,
  accentColor: #d9376e,
  black: #0d0d0d,
  blackLighter: #2a2a2a,
  gray: #bbbbbb,
  grayDark: #b9bccb,
  error: #ff0033,
  success: #07bc0c,
);

:root {
  --primaryFont: 'Raleway', sans-serif;
  --secondaryFont: 'Montserrat', sans-serif;
  --thin: 100;
  --xLight: 200;
  --light: 300;
  --regular: 400;
  --medium: 500;
  --bold: 700;
  --xBold: 800;
  --xXBold: 900;
  --error: #ff0033;
  --success: #07bc0c;
  --warning: #f1c40f;
  --info: #3498db;
  --bounce: cubic-bezier(0.68, -0.6, 0.32, 1.6);
}

* {
  box-sizing: border-box;
  outline-color: map-get($map: $colorPalette, $key: blackLighter);
}

html,
body,
#root,
.section-container {
  width: 100%;
  height: 100%;
  position: relative;
  background-color: map-get($map: $colorPalette, $key: background);
}

section.section-container {
  display: flex;
  height: calc(100% - 9%);
}

body {
  font-kerning: normal;
  margin: 0;
  padding: 0;
  font-display: swap;
  font-family: $secondaryFont;
  font-weight: map-get($fontWeights, 'regular');
  overflow-x: hidden;
}

a.nav-link {
  color: change-color($color: map-get($colorPalette, gray), $alpha: 0.9);
  transition: color 0.3s ease, fill 0.3s ease, stroke 0.3s ease;
}

input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus {
  background-color: change-color($color: map-get($colorPalette, baseColor), $alpha: 0.5);
  box-shadow: 0 0 0px 1000px change-color($color: map-get($colorPalette, baseColor), $alpha: 0.2)
    inset;
  outline: none;
  transition: background-color 5000s ease-in-out 0s;
}

$routeHighlightColor: change-color(
  $color:
    map-get(
      $map: $colorPalette,
      $key: baseColor,
    ),
  $alpha: 0.4,
);

a.nav-link:hover,
a.nav-link:active,
a.current-page,
a.current-page-svg {
  color: map-get($colorPalette, black);

  svg {
    fill: map-get($colorPalette, black);
    stroke: map-get($colorPalette, black);
  }
}

a.current-page:after {
  content: '';
  width: 80%;
  height: 8%;
  border-radius: 10px;
  background: $routeHighlightColor;
  margin-top: 5%;
  position: relative;
  z-index: -2;
  transition: transform 0.3s $cssSpring;
  transform-origin: left;
  animation: currentPage 0.3s 1s $cssSpring both;
}

.Toastify__toast {
  padding: 0.7em;
  border-radius: 2.5px;
}

.Toastify__toast-body {
  padding: 1em;
}

.blob {
  position: fixed;
  height: auto;

  path {
    transform: translate(-100, -100);
  }
}

@each $state in (complete, empty, invalid, focus) {
  .StripeElement--#{$state} {
    @if $state == 'complete' {
      color: var(--success);
    } @else if $state == empty or $state == focus {
      color: white;
    } @else {
      color: var(--error);
    }
  }
}

@each $type in (info, success, warning, error) {
  .Toastify__toast--#{$type} {
    background: map-get($map: $colorPalette, $key: background);
    color: map-get($map: $colorPalette, $key: black);

    &:after {
      content: '';
      position: absolute;
      height: 100%;
      left: 0;
      top: 0;
      background: var(--#{$type});
      width: 0.3em;
    }
  }
}

.Toastify__close-button {
  color: map-get($map: $colorPalette, $key: accentColor);
}

button.active-filter {
  cursor: default;
}

@function get-color($color) {
  @return map-get($map: $colorPalette, $key: $color);
}

.total {
  width: 95%;
  text-align: right;
  margin: 2.5em 0;
  font-size: min(4vmin, 1.3rem);
  font-weight: map-get($fontWeights, bold);
  color: get-color(gray);

  span {
    margin-left: 0.6em;
    color: get-color(black);
    font-size: inherit;
  }
}

button.checkout-button,
.submit-button {
  font-family: $primaryFont;
  font-weight: map-get($fontWeights, xXBold);
  cursor: pointer;
  border-radius: 5px;
  transition: background 0.3s ease, color 0.3s ease, scale 0.4s ease;

  &:active {
    scale: 0.95;
  }
}

button.checkout-button {
  font-size: min(3vmin, 1em);
  background: get-color(background);
  color: get-color(black);
  fill: get-color(black);
  max-width: 15em;
  border: 4px solid get-color(black);
  position: relative;
  align-self: center;
  padding: 1em;
  display: flex;
  align-items: center;
  justify-content: space-around;
  margin-bottom: 2em;
  margin: 0 auto 1em auto;
}

@each $color in (black, baseColor, accentColor, error, success) {
  .button-#{$color} {
    background: change-color(get-color($color), $alpha: 0.2);
    color: get-color($color);
    transition: background 0.3s ease, color 0.3s ease, scale 0.7s linear;

    &:disabled {
      filter: grayscale(1);
      pointer-events: none;
    }

    &:active,
    &:hover,
    &:focus,
    &:focus-within {
      background: get-color($color);
      color: get-color(background);
    }
  }
}

.submit-button {
  padding: 0.8em 0;
  margin: 0 0 0.3em 0;
  border: none;
  width: calc(0.85 * 100%);
  border-radius: 10px;
  font-size: clamp(0.7rem, 4vmin, 1.2rem);
}

.form-state-switch-text {
  font-size: clamp(0.7rem, 3vmin, 1rem);
  font-weight: map-get($fontWeights, bold);
  color: change-color(get-color(gray), $alpha: 0.7);
  cursor: pointer;
  transition: color 0.3s ease;

  &:hover,
  &:active,
  &:focus {
    color: get-color(baseColor);
  }
}

.inline-password-svg {
  position: absolute;
  right: 10%;
  cursor: pointer;
  z-index: 3;
  background: inherit;
  max-width: 4%;
  top: 50%;
  transform: translateY(-50%);
}

.checkout {
  & > .modal-container {
    background: get-color(backgroundLighter);
    width: 50%;
  }
}

.delete-account-modal-prompt {
  & > .modal-container {
    width: auto;
    background: get-color(backgroundLighter);

    div.modal-close-btn-svg-container {
      top: -14px;
      right: -17px;

      @media screen and (max-width: 600px) {
        top: -10px;
        right: -7px;
      }
    }
  }
}

.checkout-status-svg {
  width: min(25%, 13em);
  overflow: unset;
  margin: 0 auto;
}

@keyframes currentPage {
  from {
    opacity: 0;
    transform: scaleX(0);
  }
  to {
    opacity: 1;
    transform: scaleX(1);
  }
}

@keyframes spin {
  from {
    transform: rotate(0);
  }
  to {
    transform: rotate(360deg);
  }
}
